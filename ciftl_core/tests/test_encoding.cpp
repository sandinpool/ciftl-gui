#include <vector>
#include <gtest/gtest.h>
#include <ciftl_core/encoding/encoding.h>
#include <ciftl_core/crypter/crypter.h>

#include "test_core.h"

using namespace ciftl;

TEST(TestEncoding, TestHexEncoding)
{
    HexEncoding he;
    // encode
    ByteVector bv{0xA3, 0x57, 0xB1, 0x98};
    he.set_case(HexEncoding::Case::LOWER);
    auto bv_en_l = he.encode(bv);
    EXPECT_EQ(bv_en_l, "a357b198");
    he.set_case(HexEncoding::Case::UPPER);
    auto bv_en_u = he.encode(bv);
    EXPECT_EQ(bv_en_u, "A357B198");
    // decode
    auto bv_en_l_de = he.decode(bv_en_l);
    auto bv_en_u_de = he.decode(bv_en_u);
    EXPECT_TRUE(is_equal(bv, bv_en_l_de.ok().value()));
    EXPECT_TRUE(is_equal(bv, bv_en_u_de.ok().value()));
    // 有错的decode
    auto bv_err_de_1 = he.decode("2A3D#a");
    EXPECT_EQ((ErrorCode)bv_err_de_1.error().value().error_code(), (ErrorCode)HexEncodingErrorCode::BAD_CHARACTER);
    auto bv_err_de_2 = he.decode("A123C");
    EXPECT_EQ((ErrorCode)bv_err_de_2.error().value().error_code(), (ErrorCode)HexEncodingErrorCode::BAD_LENGTH);
}

TEST(TestEncoding, TestBase64Encoding)
{
    Base64Encoding be;
    // encode
    ByteVector bv{
        0x41, 0xC6, 0x54, 0x72, 0x5A, 0x0D, 0x3A, 0xF8, 0x71, 0x37, 0x90, 0x40, 0x0A, 0x07, 0x08, 0xFC,
        0x6D, 0x96, 0x38, 0x4F, 0x3D, 0x99, 0x25, 0x94, 0x14, 0xF9, 0x74, 0x19, 0xD7, 0xCA, 0x5C, 0xF3,
        0x89, 0xE7, 0xF5, 0x57, 0xC5, 0xC8, 0x88, 0x2E, 0x39, 0x56, 0xE9, 0xBF, 0xBD, 0xCD, 0x11, 0xAA,
        0xE3, 0xFA, 0x7D, 0x9A, 0x19, 0x56, 0xF9, 0x55, 0xBE, 0xDF, 0xF3, 0x22, 0xC0, 0xA4, 0x71, 0xAA,
        0xA5, 0x5D, 0x43, 0xB6, 0x18, 0x98, 0x0E, 0x91, 0x56, 0x4C, 0x50, 0xD9, 0x14, 0xD2, 0x7A, 0x06,
        0xC4, 0x9B, 0xAC, 0x04, 0x48, 0x2C, 0xCA, 0x91, 0x76, 0x28, 0xEA, 0x4A, 0x0F, 0x7C, 0x51, 0x93,
        0xF5, 0xEE, 0x82, 0xC8, 0xC8, 0xAA, 0x11, 0x5C, 0x4A, 0x85, 0x44, 0xE3, 0x17, 0x18, 0xB2, 0x16,
        0x95, 0xEC, 0x5D, 0x60, 0x40, 0x53, 0x11, 0x7F, 0xA1, 0xA9, 0xEB, 0x40, 0x8F, 0x1D, 0x5C, 0x71,
        0x9F, 0x37, 0x1B, 0x77, 0xCF, 0xC1, 0xBA, 0x3E, 0xDD, 0xC1, 0xE6, 0x65, 0xD0, 0xB5, 0x89, 0xD6,
        0x9B, 0x31, 0x4A, 0x32, 0xFE, 0x96, 0x28, 0xC5, 0xE7, 0x8E, 0x27, 0xE7, 0x0D, 0x69, 0x56, 0xF7,
        0x8D, 0xA7, 0x9C, 0x63, 0xAC, 0x31, 0x17, 0x58, 0x19, 0x16, 0xFB, 0x1D, 0x4E, 0xD5, 0x37, 0x35,
        0xE4, 0x85, 0x52, 0xB5, 0x01, 0x56, 0x4F, 0x80, 0x34, 0x54, 0x78, 0x54, 0x58, 0x55, 0x67, 0xD0,
        0x6C, 0x81, 0xB4, 0xE0, 0x5F, 0xE6, 0x19, 0x40, 0x4C, 0xEA, 0xEF, 0xFB, 0xA4, 0xB7, 0x56, 0x16,
        0x3E, 0xD3, 0x78, 0xD6, 0x4E, 0x87, 0xA9, 0x40, 0xB9, 0xCD, 0x59, 0xD3, 0x47, 0xE9, 0x1B, 0x97,
        0xAE, 0xDD, 0x39, 0xF5, 0x70, 0x5C, 0x95, 0x00, 0x08, 0xFA, 0xCD, 0x23, 0xEA, 0xAD, 0xE3, 0x51,
        0x3D, 0xDE, 0xE2, 0x37, 0x6D, 0xAF, 0x3D, 0x09, 0xEA, 0x21, 0xEA, 0xE2, 0xB2, 0x43, 0x62, 0xDF,
        0x88, 0xA5, 0x22, 0x5F, 0xE8, 0xA6, 0x44, 0x18, 0x24, 0x58, 0x48, 0xEE, 0x39, 0x1E, 0x42, 0xAF,
        0x38, 0x3C, 0xDB, 0x2D, 0x69, 0xEC, 0xF7, 0x53, 0x80, 0xC9, 0xED, 0x34, 0x77, 0x92, 0x92, 0x2C,
        0xF3, 0x9A, 0x8E, 0x8B, 0x54, 0x69, 0xC3, 0x78, 0xBC, 0x66, 0xB6, 0xE8, 0xB2, 0x85, 0x38, 0xF1,
        0x4B, 0x54, 0xD1, 0xC1, 0xD3, 0xEC, 0xA5, 0x0A, 0x78, 0x94, 0xCC, 0xB0, 0x75, 0x1D, 0x61, 0xF7,
        0xAE, 0x4D, 0xBC, 0x9F, 0xC8, 0xDF, 0x95, 0x86, 0x2C, 0xDE, 0x11, 0xD3, 0x77, 0x71, 0xF0, 0xC9,
        0x55, 0x65, 0x58, 0xB3, 0xBE, 0xF5, 0xFB, 0x8F, 0x11, 0xA4, 0x92, 0x6F, 0x92, 0x3B, 0xED, 0xAE,
        0x39, 0x28, 0x12, 0x72, 0xD9, 0xD7, 0x1D, 0x1E, 0x17, 0xCB, 0xF5, 0xA3, 0xB0, 0x85, 0xF8, 0xDF,
        0xFA, 0x80, 0x26, 0x72, 0xC3, 0xDC, 0x90, 0xB5, 0xD1, 0x6F, 0xEE, 0xC1, 0xB8, 0x5A, 0xB6, 0xB1,
        0xDA, 0x65, 0x17, 0x8F, 0xA1, 0xB2, 0xA5, 0x8C, 0x65, 0x8F, 0xA6, 0x7F, 0x86, 0x77, 0x42, 0xCD,
        0xA2, 0x8B, 0x16, 0x25, 0xFD, 0x0F, 0xDF, 0xC4, 0x7F, 0xC0, 0x34, 0x28, 0xD3, 0xFA, 0x9E, 0x56,
        0x9A, 0x13, 0x79, 0x36, 0xBD, 0x65, 0x5B, 0x94, 0x3F, 0xDD, 0x08, 0xC6, 0x29, 0x13, 0x24, 0x23,
        0x77, 0x3E, 0x27, 0xA5, 0x0D, 0x8E, 0x47, 0x79, 0x28, 0xB6, 0x5C, 0x5B, 0xD3, 0xB1, 0xF0, 0xE6,
        0x47, 0x16, 0x09, 0x5B, 0x51, 0x7C, 0x4F, 0x6A, 0x14, 0xBE, 0xA5, 0x08, 0xCC, 0x37, 0x58, 0x64,
        0x69, 0x27, 0x7B, 0x80, 0x16, 0xEB, 0x0D, 0x04, 0x1D, 0xC1, 0x01, 0x44, 0xAF, 0x27, 0x57, 0x9E,
        0x73, 0x26, 0xBB, 0xA5, 0x01, 0x12, 0x77, 0xBA, 0x96, 0x8E, 0xAB, 0x08, 0xA6, 0xD6, 0xFE, 0x06,
        0x2B, 0xA7, 0x59, 0xF7, 0xC0, 0x50, 0x56, 0x09, 0xF2, 0xAA, 0x64, 0x02, 0x5E, 0x19, 0xE3, 0xAE,
        0x73, 0xCC, 0xA8, 0x6F, 0xF8, 0xDB, 0xAD, 0xA2, 0xBC, 0xFE, 0xEC, 0xC0, 0xF3, 0xF7, 0x96, 0x76,
        0x36, 0xF4, 0x2C, 0x01, 0x38, 0x77, 0x2E, 0x9F, 0x80, 0x8A, 0x69, 0xE7, 0xDF, 0x58, 0x09, 0x3D,
        0x60, 0x6A, 0x0C, 0xCA, 0xE4, 0x1D, 0xAC, 0xB2, 0xC0, 0x11, 0xDD, 0x5D, 0xF0, 0xB5, 0x07, 0x11,
        0xC5, 0x17, 0x82, 0x46, 0x2D, 0xB1, 0x85, 0x53, 0xE3, 0xCF, 0x95, 0x7B, 0x31, 0xC8, 0xA1, 0x62,
        0x17, 0x32, 0x49, 0x79, 0xF7, 0xB0, 0x17, 0xF2, 0x22, 0x21, 0x98, 0x3E, 0xE1, 0x3E, 0x9C, 0x2C,
        0xD6, 0xEE, 0x0E, 0x24, 0xD3, 0xE1, 0x2D, 0x26, 0x7B, 0x3C, 0x17, 0x77, 0x5B, 0x63, 0xE6, 0x2C,
        0x3B, 0x2C, 0xE3, 0xF3, 0xE6, 0x03, 0x72, 0xDC, 0xA2, 0xD9, 0xDC, 0xFA, 0x0C, 0xD6, 0x03, 0x0D,
        0x2E, 0x29, 0xA8, 0xAD, 0xE2, 0x7F, 0xDE, 0x8A, 0xED, 0xE7, 0xBC, 0xCB, 0x64, 0x36, 0x7A, 0x9B,
        0x31, 0x32, 0x82, 0x64, 0xED, 0x18, 0x28, 0x5D, 0x48, 0x3A, 0x08, 0x57, 0xBE, 0xD3, 0x4D, 0xF0,
        0x54, 0x4F, 0x49, 0xA6, 0x96, 0x98, 0x33, 0x69, 0x22, 0x3B, 0xFA, 0x99, 0x59, 0x60, 0x60, 0xA4,
        0x22, 0xF5, 0xF4, 0xAC, 0xC7, 0x84, 0x84, 0xD9, 0x5F, 0x98, 0x24, 0x53, 0x44, 0xA0, 0xF1, 0x02,
        0x93, 0xB7, 0x10, 0x89, 0xB0, 0xCB, 0xAB, 0x1E, 0x46, 0xF6, 0xE7, 0x37, 0x4D, 0x18, 0x01, 0x31,
        0xFB, 0xF7, 0x29, 0x5E, 0xB9, 0x72, 0xB9, 0x24, 0x74, 0x9C, 0xDA, 0x1E, 0xF2, 0xBD, 0xCA, 0x69,
        0xFB, 0x91, 0x40, 0x84, 0x73, 0x4B, 0xAA, 0x7A, 0xC9, 0x2A, 0x3F, 0x30, 0x53, 0xA6, 0x29, 0x1F,
        0x6F, 0x90, 0x36, 0xC2, 0x87, 0x9F, 0xDB, 0x89, 0x5A, 0x42, 0x75, 0x1D, 0x1F, 0xBB, 0x15, 0x3A,
        0x60, 0xDC, 0x40, 0x78, 0xA7, 0xE1, 0x76, 0xC0, 0x60, 0x3D, 0x63, 0x43, 0x85, 0x66, 0x08, 0x3E,
        0xF2, 0xEB, 0x54, 0xD4, 0x7B, 0x5E, 0xE4, 0xC6, 0x28, 0xDA, 0xEA, 0xE8, 0x26, 0x42, 0x74, 0x80,
        0x58, 0x70, 0x9B, 0xFB, 0x97, 0xE9, 0x3C, 0xA8, 0x03, 0xEA, 0x55, 0x63, 0x00, 0xCA, 0x32, 0x54,
        0xBF, 0x09, 0xDF, 0x42, 0x65, 0x93, 0xB1, 0x0D, 0x38, 0x08, 0xCC, 0x4D, 0x65, 0x0C, 0xEF, 0x3C,
        0x40, 0xF3, 0xFF, 0x56, 0x15, 0x52, 0x09, 0x60, 0xEF, 0x40, 0xBE, 0xB5, 0xE5, 0x57, 0xA0, 0x1A,
        0xD2, 0xBB, 0x59, 0x71, 0x94, 0xB9, 0x04, 0x05, 0x28, 0xC5, 0x56, 0x4B, 0x40, 0xE9, 0xEF, 0x5F,
        0x36, 0xE5, 0x3F, 0x88, 0x74, 0xA1, 0xD1, 0x86, 0xA5, 0xA0, 0xE9, 0x94, 0x58, 0xA4, 0xAD, 0x3D,
        0xED, 0xA9, 0x65, 0x79, 0xE0, 0xDD, 0x80, 0xC6, 0xDB, 0x5E, 0x66, 0x18, 0x1D, 0xBB, 0x42, 0xD2,
        0x1F, 0x97, 0x51, 0x40, 0x8C, 0xEC, 0x6D, 0x2F, 0xE8, 0xC1, 0xC7, 0x90, 0x82, 0x60, 0x1A, 0x5D,
        0x95, 0x4F, 0xCC, 0x24, 0xA3, 0xA2, 0xB1, 0xE1, 0x78, 0x72, 0x7E, 0x1B, 0x68, 0x79, 0x1B, 0x6E,
        0xA2, 0x2D, 0x51, 0xE6, 0xB9, 0xE0, 0x95, 0xE3, 0xC1, 0xAE, 0xE9, 0x6A, 0x91, 0x4B, 0x0C, 0x11,
        0x14, 0xFC, 0x7C, 0xF3, 0xBA, 0x3E, 0x02, 0x56, 0x69, 0xF7, 0xC2, 0xF2, 0x90, 0x2E, 0x0F, 0x04,
        0x29, 0xA2, 0x7D, 0x93, 0xDB, 0xBD, 0xEB, 0x9E, 0x7D, 0xC4, 0x8A, 0x1A, 0xB6, 0x3A, 0x0A, 0xE1,
        0x78, 0xD3, 0x85, 0x19, 0x87, 0x79, 0xC5, 0x9B, 0x5C, 0x33, 0xFD, 0x6D, 0x07, 0xF9, 0x19, 0x56,
        0xE6, 0xC2, 0x37, 0x14, 0x55, 0x57, 0xF1, 0xD1, 0xAC, 0xB6, 0x83, 0xC9, 0x25, 0x16, 0x00, 0x4B,
        0x92, 0xCC, 0x1B, 0x7D, 0xF1, 0xB3, 0x30, 0x9B, 0x44, 0xC4, 0x9C, 0x91, 0x44, 0x0C, 0x98, 0x1B,
        0xCA, 0x2F, 0x08, 0xEA, 0x11, 0x15, 0x0F, 0x5E, 0x23, 0x8A, 0x55, 0xD7, 0x18, 0xDB, 0x40, 0xBF,
        0xF7, 0xB2, 0x98, 0xBC, 0x61, 0xDC, 0x5B, 0xB4, 0x58, 0x9B, 0xB2, 0x95, 0xC3, 0xAF, 0x4D, 0xFF,
        0x8E, 0x5E, 0x98, 0x4D, 0x79, 0xF3, 0x8F, 0x9F, 0xF9, 0x9C, 0x24, 0xD6, 0xCB, 0x9A, 0x7C, 0xA2,
        0x01, 0x25, 0x78, 0x24, 0xC5, 0x7B, 0x44, 0xB8, 0x11, 0xFA, 0xF4, 0xE8, 0x02, 0x3C, 0x5F, 0xA0,
        0xAD, 0x98, 0xB8, 0x24, 0x7E, 0x81, 0xA1, 0x60, 0x8D, 0x98, 0xB7, 0x8D, 0x7F, 0x78, 0xCE, 0x4E,
        0xCD, 0x97, 0x5B, 0xBA, 0x90, 0xAA, 0xCB, 0xED, 0x2F, 0x7B, 0xBB, 0x29, 0x85, 0x22, 0x58, 0x92,
        0x67, 0xFC, 0x59, 0x0E, 0x93, 0xE4, 0x58, 0xE0, 0x7D, 0x81, 0x7A, 0xF5, 0x7A, 0xAF, 0xB1, 0x10,
        0x3D, 0x50, 0x08, 0x35, 0xB7, 0x16, 0xB7, 0x0D, 0xB3, 0x0A, 0x06, 0x2D, 0xD2, 0xE4, 0x25, 0x5C,
        0xBE, 0x7A, 0x92, 0x5D, 0xB2, 0xD2, 0xAB, 0xD4, 0xAF, 0xAE, 0x7C, 0x3F, 0x04, 0x8A, 0x06, 0x29,
        0xF6, 0x6C, 0x65, 0x00, 0xB4, 0x01, 0xB1, 0x47, 0xE4, 0xE8, 0x75, 0xFD, 0x74, 0x19, 0x1A, 0x79,
        0x7B, 0xD7, 0x9F, 0x15, 0x55, 0x98, 0x75, 0x63, 0x4B, 0xC9, 0x73, 0xCC, 0x6A, 0x6C, 0x11, 0xCD,
        0x62, 0xD9, 0x81, 0x3C, 0x85, 0x42, 0x45, 0x3B, 0x4E, 0xA8, 0x50, 0xD5, 0xFB, 0x6C, 0xED, 0x57,
        0x29, 0xAD, 0xDE, 0xF1, 0x7D, 0x15, 0x77, 0x2A, 0xBD, 0xD1, 0xB4, 0x33, 0xFE, 0xC7, 0x7A, 0x27,
        0xAE, 0x5C, 0x8B, 0xBB, 0xAC, 0x41, 0xE4, 0x01, 0xBD, 0x34, 0x7F, 0x25, 0xF9, 0x9B, 0xB7, 0x5B,
        0x18, 0x6A, 0xD1, 0x5D, 0xAD, 0xBE, 0x52, 0x39, 0xB6, 0x17, 0x3C, 0x3F, 0x14, 0x27, 0x4D, 0x52,
        0xCB, 0x8A, 0xD9, 0x06, 0x30, 0xFD, 0xE5, 0x23, 0x45, 0xC6, 0x90, 0x94, 0x05, 0x7A, 0xF8, 0xDA,
        0x5A, 0x4E, 0x1F, 0x7D, 0xEE, 0x9A, 0x8F, 0x15, 0x2B, 0x42, 0xAB, 0xED, 0x05, 0x26, 0xFB, 0x61,
        0x70, 0xD1, 0xE3, 0x57, 0x99, 0x08, 0x80, 0x9E, 0x3C, 0xF1, 0xB5, 0xF8, 0xBA, 0xEE, 0x90, 0x21,
        0xC8, 0x6F, 0x94, 0x25, 0xCC, 0x45, 0x98, 0xB4, 0x53, 0x4D, 0x44, 0x72, 0x2E, 0x77, 0x58, 0x58,
        0x16, 0x6F, 0x45, 0xA0, 0xF7, 0x87, 0xD3, 0xE4, 0x3D, 0x97, 0xC4, 0x5E, 0xB8, 0xF4, 0xC7, 0x6F,
        0xFC, 0xB6, 0x1D, 0xDE, 0x56, 0xEE, 0xBC, 0x83, 0xAC, 0x85, 0xEF, 0x33, 0xF0, 0xDD, 0x9C, 0x30,
        0xF9, 0x77, 0xC2, 0x82, 0xDA, 0x34, 0xDE, 0xDD, 0x26, 0xF2, 0x36, 0x08, 0xA0, 0x9A, 0x47, 0xF5,
        0x57, 0xE1, 0xCD, 0xE7, 0x20, 0x5B, 0x30, 0x63, 0xF5, 0x8E, 0x38, 0xCB, 0xB1, 0x32, 0x62, 0xD7,
        0x1C, 0xD1, 0x3C, 0x56, 0x5A, 0x5E, 0x87, 0xE1, 0x19, 0x8E, 0x2A, 0x6A, 0x1B, 0x02, 0x1D, 0xDC,
        0xFB, 0x81, 0xDC, 0x32, 0x43, 0xE2, 0x09, 0xA7, 0x34, 0x5D, 0x4E, 0x08, 0xD8, 0x63, 0xAD, 0x2D,
        0x44, 0x38, 0xBE, 0x28, 0x0F, 0xE5, 0x97, 0xBF, 0x7D, 0x4B, 0x60, 0x2C, 0xD3, 0x64, 0xBD, 0x3F,
        0xD1, 0xFB, 0xA4, 0x62, 0x5B, 0x6F, 0x44, 0x18, 0xB0, 0x3D, 0x05, 0xEE, 0xD4, 0x71, 0xDF, 0x08,
        0xFA, 0x3C, 0x73, 0xB6, 0x19, 0x40, 0xBC, 0xB9, 0xFD, 0x5D, 0x3F, 0x2B, 0x76, 0x0A, 0xFC, 0x2D,
        0x83, 0x89, 0xA3, 0xD3, 0x86, 0x83, 0xBF, 0xF1, 0xF7, 0xCC, 0xD6, 0xB2, 0x15, 0x70, 0xC1, 0x31,
        0x8C, 0x40, 0xAD, 0x75, 0x18, 0x79, 0x86, 0x86, 0x86, 0x4D, 0xD0, 0x77, 0xB9, 0x53, 0x14, 0xA8,
        0x82, 0x38, 0x7C, 0x92, 0x6B, 0x31, 0x3D, 0xE3, 0xD8, 0xFC, 0xDB, 0xC0, 0x0F, 0x89, 0x7F, 0x64,
        0x0C, 0x7A, 0xE0, 0x8C, 0x33, 0x2E, 0x6B, 0x4E, 0x4C, 0xF8, 0xC1, 0x56, 0x52, 0xB3, 0xA4, 0xA8,
        0x00, 0xEA, 0xF7, 0x60, 0x2F, 0x20, 0x67, 0x12, 0x68, 0x14, 0xD4, 0xB6, 0x3D, 0xF9, 0xAA, 0x54,
        0x4E, 0xF8, 0xA5, 0xD7, 0x14, 0x90, 0xC4, 0xB1, 0xC5, 0x8C, 0x63, 0x3F, 0xFC, 0xB0, 0xAE, 0x18,
        0xF5, 0x53, 0xFD, 0xB4, 0x80, 0x8E, 0xC7, 0x16, 0x00, 0xAF, 0x26, 0x66, 0x1A, 0x10, 0x35, 0xA4,
        0xED, 0x97, 0xB8, 0xE5, 0xE9, 0x65, 0xCF, 0xC1, 0xAB, 0x90, 0xAD, 0xE0, 0x75, 0xE4, 0x98, 0xD7,
        0x1D, 0xFD, 0x9E, 0xB5, 0x8D, 0x49, 0xCC, 0xFA, 0x3C, 0xBA, 0xD7, 0xD7, 0x29, 0x35, 0x78, 0xEF,
        0x46, 0x0B, 0xFB, 0xFA, 0x63, 0x07, 0xAB, 0x02, 0xFD, 0xDB, 0x38, 0x18, 0x82, 0xFF, 0x2D, 0xB8,
        0xF6, 0x45, 0x0C, 0x43, 0x0A, 0xB5, 0xC9, 0x40, 0xFC, 0x77, 0x93, 0x44, 0xED, 0xDF, 0x31, 0xC0,
        0x7A, 0xDC, 0x72, 0x0D, 0xB9, 0x64, 0x60, 0x71, 0xFD, 0x99, 0x42, 0xFE, 0xE8, 0xC3, 0x9A, 0x83,
        0xC6, 0x5D, 0x9E, 0xEF, 0x30, 0xCB, 0xF7, 0xDB, 0x66, 0x7E, 0xAB, 0x1B, 0xF0, 0x9B, 0x7F, 0x9A,
        0x6E, 0x65, 0x45, 0xCB, 0xA5, 0xFD, 0xD5, 0x7A, 0x32, 0x4B, 0xAD, 0xD8, 0x73, 0x08, 0x72, 0xF2,
        0x92, 0x4B, 0xCE, 0xFE, 0xBA, 0x16, 0x6F, 0x33, 0xE0, 0xB9, 0x12, 0x00, 0xBF, 0x0B, 0xE7, 0xF2,
        0xCD, 0xD5, 0xC2, 0x92, 0x65, 0xEA, 0xD9, 0x00, 0x66, 0xC6, 0xFE, 0x24, 0xF2, 0xB8, 0xAB, 0xB4,
        0x27, 0xE6, 0x3C, 0x6B, 0xE7, 0xB6, 0x32, 0x24, 0x19, 0x65, 0x5F, 0xC8, 0xEA, 0xE3, 0x50, 0x30,
        0x03, 0x30, 0x5A, 0x77, 0xBA, 0xD2, 0x1B, 0x59, 0xA7, 0x31, 0x5F, 0x92, 0x37, 0xD2, 0x9F, 0x6D,
        0x13, 0xDE, 0xAA, 0xE1, 0x7D, 0x5F, 0x22, 0xFF, 0x00, 0x16, 0xCF, 0x7D, 0x08, 0xEC, 0x07, 0xB1,
        0x43, 0x4C, 0xA0, 0x40, 0xEB, 0xF5, 0x33, 0x4E, 0x49, 0x08, 0x9E, 0x07, 0x1B, 0x69, 0x0D, 0xB3,
        0xAB, 0xB2, 0xFF, 0xC4, 0xC4, 0x58, 0x07, 0x87, 0xCA, 0xB1, 0x41, 0x60, 0xB0, 0x02, 0xBC, 0xC7,
        0x81, 0xD6, 0x4E, 0x6A, 0xC1, 0x24, 0x98, 0x1F, 0xE2, 0x1D, 0x2C, 0x9C, 0x77, 0xA3, 0x16, 0x12,
        0x06, 0xB9, 0x45, 0x29, 0x86, 0x7E, 0x8C, 0xF5, 0xF0, 0x71, 0x39, 0xE2, 0x80, 0x17, 0x83, 0xB7,
        0x77, 0x4D, 0x40, 0x24, 0x8B, 0xC5, 0xA8, 0x7D, 0x4B, 0x94, 0x1F, 0x9D, 0x2B, 0xBC, 0x41, 0x09,
        0xFF, 0x1C, 0xAB, 0xD9, 0x14, 0x41, 0x3F, 0xF5, 0x2D, 0xE4, 0xDE, 0xAA, 0x18, 0x30, 0xD5, 0xBA,
        0xA3, 0x03, 0x77, 0x52, 0x1B, 0xD2, 0xA4, 0x8F, 0xA4, 0xE5, 0x31, 0x8A, 0x19, 0x02, 0x79, 0x0B,
        0x36, 0xD8, 0x85, 0x52, 0x42, 0xA3, 0x95, 0xA6, 0x83, 0xED, 0xFD, 0x92, 0x1E, 0x65, 0x8D, 0xFD,
        0x46, 0x21, 0x18, 0x8A, 0xC5, 0xD8, 0xB2, 0xED, 0x4F, 0xDB, 0xC0, 0x19, 0x29, 0xD9, 0x0A, 0x7F,
        0x0E, 0xBF, 0x48, 0xC6, 0x68, 0x3E, 0xE5, 0x9D, 0x35, 0xC2, 0x04, 0xA9, 0x3B, 0xE3, 0xED, 0xA1,
        0x65, 0xA1, 0x6C, 0x1A, 0x66, 0xFA, 0xDA, 0xA7, 0xF3, 0x99, 0xCD, 0x31, 0x45, 0xB7, 0xA9, 0xC0,
        0xAF, 0x75, 0x8F, 0x19, 0x62, 0x3D, 0x69, 0xE3, 0xCC, 0xED, 0x08, 0x32, 0x1B, 0xEB, 0x98, 0xBA,
        0xCB, 0x54, 0xDF, 0x00, 0x5A, 0xED, 0x0A, 0x3F, 0x79, 0x91, 0xFE, 0xF0, 0x5D, 0x26, 0x6A, 0x1D,
        0x04, 0x74, 0x1A, 0xE7, 0x90, 0x5F, 0x41, 0xF2, 0x15, 0x4D, 0xC1, 0xA3, 0x6F, 0xD1, 0x96, 0x54,
        0x03, 0xDB, 0x01, 0xF0, 0x83, 0xFC, 0x13, 0xAA, 0x11, 0x8D, 0x9D, 0xA6, 0x64, 0xC6, 0xC8, 0xDA,
        0xBD, 0x0A, 0xCA, 0x7B, 0xD6, 0xF9, 0x71, 0xBC, 0x20, 0x14, 0x89, 0xA7, 0xED, 0x00, 0x54, 0x69,
        0x61, 0xB0, 0x89, 0x52, 0x47, 0x03, 0xAB, 0x53, 0x2D, 0xA8, 0x97, 0xD8, 0x50, 0x4A, 0xA1, 0x2C,
        0x4C, 0x58, 0xA7, 0xD9, 0x9C, 0xF2, 0xDF, 0xA4, 0x42, 0xC8, 0x62, 0x1D, 0x4E, 0xF3, 0xA1, 0xEC,
        0xF9, 0x1C, 0x4E, 0x41, 0x91, 0x75, 0x6A, 0x18, 0x83, 0x54, 0x7F, 0x3E, 0x1C, 0x79, 0x38, 0x41,
        0xEB, 0x53, 0xDB, 0xB5, 0xCD, 0xC7, 0x56, 0x82, 0x13, 0x43, 0xEE, 0x16, 0x4E, 0x3B, 0xB3, 0xC1,
        0xA4, 0x40, 0x4D, 0x8D, 0xCE, 0x58, 0xCD, 0x4A, 0x0E, 0x53, 0x89, 0xC4, 0xC8, 0x2C, 0x33, 0x35,
        0x93, 0xC5, 0xB5, 0x7A, 0xDA, 0x86, 0x87, 0xA2, 0x70, 0xB5, 0x75, 0xDA, 0xAE, 0x7E, 0x21, 0xC2,
        0x02, 0x0F, 0xA7, 0xB9, 0xF0, 0x46, 0x37, 0xB1, 0x0C, 0xC0, 0x90, 0x8D, 0x56, 0x54, 0x9B, 0x1E,
        0x05, 0x4A, 0xA8, 0x43, 0xB7, 0xD5, 0x03, 0xC6, 0x78, 0x9F, 0xE3, 0xE4, 0x34, 0x73, 0xE7, 0xBC,
        0x71, 0x4F, 0xA0, 0xFD, 0x6E, 0x6C, 0xEC, 0x86, 0x00, 0x05, 0x12, 0xEB, 0xCE, 0xF3, 0xE0, 0x01,
        0xC4, 0x55, 0x4A, 0xE5, 0xDC, 0xEA, 0x43, 0x20, 0x91, 0xD8, 0xC9, 0xE1, 0xA8, 0xE9, 0x66, 0x70,
        0x19, 0x9D, 0xA2, 0x45, 0x41, 0x8C, 0x15, 0x77, 0xB0, 0xE4, 0x2F, 0x68, 0x3A, 0x1F, 0xD2, 0xDA,
        0x18, 0x2A, 0x56, 0xE3, 0x44, 0x93, 0xA1, 0x58, 0x63, 0x8A, 0x58, 0xB4, 0xD8, 0xBF, 0x62, 0x92,
        0xE3, 0x68, 0x38, 0x30, 0xE7, 0xFC, 0xC0, 0xA6, 0x27, 0x70, 0xAF, 0xC0, 0xA9, 0x04, 0xAA, 0x98,
        0x0B, 0xE3, 0xAB, 0x78, 0x70, 0x2D, 0x5D, 0x8C, 0xDA, 0x33, 0x6A, 0x75, 0x93, 0xEB, 0x03, 0xCD,
        0x7C, 0xF3, 0x15, 0x11, 0x62, 0xA6, 0xDE, 0xAA, 0xB3, 0x13, 0xF9, 0xE3, 0x2E, 0xE1, 0x00, 0x1E,
        0x6E, 0x6D, 0x4C, 0x90, 0x64, 0xAE, 0x9A, 0x4A, 0x28, 0xA6, 0x79, 0x6D, 0xB0, 0x75, 0xD6, 0xBC,
        0x55, 0x55, 0x0B, 0xF2, 0x38, 0x08, 0x44, 0x8C, 0xE6, 0x88, 0x1D, 0xF8, 0xE1, 0x08, 0xD3, 0x44,
        0xD4, 0x8A, 0x5F, 0xCF, 0xA7, 0x9D, 0x5F, 0x97, 0xBF, 0x09, 0xA6, 0x1C, 0x07, 0x7B, 0xCA, 0xF2,
        0xA5, 0x7A, 0x15, 0x8C, 0x73, 0x33, 0xAB, 0xCB, 0x98, 0xDF, 0xCD, 0x55, 0xDB, 0xE0, 0x85, 0xD3,
        0x94, 0xCF, 0x2F, 0x88, 0x46, 0x16, 0x97, 0xEC, 0x5A, 0xD6, 0xB4, 0x33, 0x75, 0x2C, 0x34, 0xF3,
        0x64, 0x21, 0x4F, 0x4F, 0xA1, 0xCE, 0xB0, 0x58, 0xE2, 0x7E, 0x5C, 0x88, 0x3D, 0xE4, 0xDD, 0x8C,
        0xC9, 0xA6, 0x2B, 0xC7, 0xD0, 0xC9, 0x12, 0x34, 0xF4, 0xDC, 0x0C, 0x99, 0xDC, 0xCF, 0xCC, 0x38,
        0x51, 0xDE, 0xF9, 0x60, 0xD5, 0x12, 0xD5, 0x9A, 0x24, 0x1C, 0xC6, 0x51, 0x29, 0xA3, 0x04, 0x21,
        0x54, 0x4B, 0xE5, 0x48, 0x5A, 0xFA, 0x83, 0xCF, 0xCD, 0x3E, 0xB8, 0x6A, 0x1F, 0xBB, 0xAE, 0x2F,
        0xEB, 0x18, 0x79, 0x95, 0xA3, 0xCD, 0x80, 0x6B, 0xFF, 0xC6, 0xA8, 0xA4, 0xC7, 0xC0, 0x89, 0x39,
        0xD8, 0xCF, 0x14, 0x7D, 0x7B, 0x81, 0x80, 0x91, 0x6B, 0x70, 0x69, 0xF3, 0x29, 0x5E, 0x5B, 0x38,
        0x7A, 0x09, 0x57, 0x7B, 0x26, 0x62, 0xF8, 0x19, 0x59, 0xDC, 0x44, 0xAB, 0x40, 0xF2, 0x5E, 0x71,
        0xBC, 0x1A, 0x93, 0x8B, 0x50, 0xC8, 0x86, 0xC3, 0x95, 0x3F, 0x71, 0xB7, 0xE6, 0x39, 0xB6, 0xA9,
        0x06, 0xC2, 0x3F, 0x51, 0xFC, 0xC5, 0x6B, 0x66, 0x5F, 0x13, 0x80, 0xC2, 0xC4, 0x02, 0xDA, 0x55,
        0x2C, 0xE2, 0x61, 0x4D, 0x78, 0xD1, 0xF4, 0x21, 0x59, 0xC7, 0xCA, 0x6D, 0x46, 0xDF, 0x08, 0xCA,
        0x5D, 0x26, 0x03, 0x0A, 0x47, 0x81, 0xEC, 0x88, 0x7D, 0x72, 0xE5, 0x7A, 0x86, 0xD1, 0xB6, 0x6B,
        0x17, 0xB7, 0xA0, 0x50, 0x17, 0x2F, 0x0C, 0xDA, 0x06, 0x7C, 0x0E, 0xFF, 0x40, 0xFB, 0xFD, 0xDA,
        0x11, 0xEC, 0x97, 0x4F, 0xAD, 0xB3, 0x6E, 0x2A, 0x66, 0x56, 0xA0, 0x97, 0xBE, 0x52, 0x10, 0x29,
        0x30, 0xFA, 0x97, 0xD5, 0xD6, 0x0A, 0xF6, 0x93, 0x32, 0x24, 0x7E, 0x8D, 0xCB, 0x49, 0xA6, 0x08,
        0x76, 0xA0, 0x14, 0x7A, 0x58, 0x0D, 0xCB, 0x68, 0x12, 0x70, 0x85, 0x11, 0xA5, 0x8A, 0x6C, 0xF9,
        0xF0, 0xDF, 0xB1, 0xD2, 0xE0, 0x1E, 0xBD, 0x64, 0xB4, 0xD9, 0xFD, 0x67, 0xE6, 0x9A, 0x76, 0x7B,
        0xA7, 0xA1, 0xB6, 0x9B, 0xF5, 0xD6, 0xC0, 0xD6, 0xB9, 0xC4, 0x08, 0x16, 0x7B, 0x95, 0xAF, 0x3C,
        0x91, 0x70, 0x7C, 0xF0, 0xE6, 0xBA, 0x51, 0xD8, 0xA9, 0x0A, 0x12, 0x16, 0x90, 0xD3, 0x46, 0x4A,
        0x80, 0x21, 0xDF, 0x77, 0xB8, 0xE7, 0xEE, 0x7A, 0xDC, 0xAA, 0x43, 0x06, 0x83, 0xA1, 0x23, 0x43,
        0x13, 0x8A, 0xAC, 0x8E, 0x1A, 0xC3, 0x84, 0xF1, 0x71, 0x78, 0xEA, 0x54, 0xD0, 0xEC, 0x52, 0x84,
        0xA4, 0x2A, 0x13, 0x83, 0x55, 0xAE, 0xDC, 0xCD, 0x3C, 0xCE, 0xF4, 0x75, 0x04, 0xF2, 0x77, 0x57,
        0x3A, 0xDF, 0x16, 0xBD, 0x36, 0xB0, 0x0E, 0x22, 0xB2, 0x3B, 0x54, 0x0F, 0xAD, 0xF3, 0x3B, 0x29,
        0x78, 0x95, 0xFB, 0xED, 0x06, 0x2C, 0xF1, 0xBE, 0xDF, 0x32, 0x7C, 0x2C, 0x48, 0xDE, 0xBD, 0xB3,
        0x8D, 0xF4, 0xB6, 0x42, 0x75, 0x8D, 0x8A, 0x53, 0x53, 0xBC, 0xC5, 0x6A, 0x34, 0x07, 0x03, 0x2E,
        0x24, 0x12, 0x63, 0x94, 0x8B, 0xF8, 0x7B, 0xAE, 0x11, 0x28, 0xE2, 0x28, 0xA0, 0xD1, 0x6A, 0x85,
        0x57, 0x23, 0xAB, 0x97, 0x97, 0xFB, 0x77, 0xE1, 0x81, 0xBA, 0x52, 0xBB, 0x78, 0x5F, 0x14, 0x7D,
        0x98, 0x26, 0x3C, 0x0B, 0x24, 0x3C, 0xAC, 0x75, 0x5F, 0x5A, 0xCF, 0x9A, 0x5D, 0x48, 0x5A, 0xF0,
        0xA8, 0x98, 0x36, 0xEA, 0xE0, 0x2C, 0x39, 0x9B, 0xAC, 0x47, 0xB9, 0x8E, 0x8D, 0x43, 0x3B, 0xF3,
        0x83, 0x26, 0x9B, 0x9A, 0x97, 0xB4, 0x98, 0x5B, 0x9D, 0xC4, 0x90, 0xE5, 0xD7, 0xD7, 0xCB, 0x0C,
        0x53, 0x56, 0xC0, 0x1C, 0x19, 0xE9, 0x16, 0xC6, 0x89, 0xCA, 0x5A, 0xA0, 0x8B, 0x0F, 0xA6, 0x60,
        0x5C, 0x3E, 0xB9, 0x3C, 0x2F, 0xB4, 0x39, 0x20, 0xE0, 0xB7, 0x18, 0xA3, 0x68, 0x25, 0x5E, 0xE3,
        0xF0, 0x31, 0xD1, 0xC2, 0x8C, 0x8D, 0x3A, 0x19, 0x11, 0xFD, 0x37, 0xE4, 0x8F, 0x36, 0xEA, 0x8A,
        0x5C, 0x6E, 0xF3, 0xA1, 0xBA, 0x21, 0x6C, 0xF5, 0x83, 0xD5, 0xFC, 0x9F, 0x70, 0xED, 0x1A, 0x76,
        0xDB, 0xD2, 0x1A, 0x27, 0x0B, 0x09, 0xB4, 0xC1, 0x7F, 0xEE, 0xF8, 0x82, 0xBC, 0x3A, 0x00, 0x2A,
        0x81, 0x89, 0xC8, 0x2D, 0x89, 0x75, 0xF2, 0x80, 0x24, 0x19, 0x76, 0xDC, 0x52, 0xFD, 0x69, 0xB6,
        0x32, 0xB8, 0x6D, 0x48, 0xE8, 0xDF, 0x77, 0x5D, 0x55, 0xFF, 0xEA, 0xD2, 0x35, 0xB6, 0x44, 0xEC,
        0x8C, 0x36, 0xDE, 0xF7, 0x73, 0xBD, 0x71, 0xDB, 0xA7, 0xCE, 0x64, 0x8D, 0x75, 0x38, 0x19, 0x8C,
        0xD9, 0x33, 0xC1, 0xD6, 0xFC, 0x29, 0x5B, 0x03, 0x56, 0xE8, 0xFC, 0x65, 0x23, 0x56, 0x76, 0x73,
        0x02, 0xF1, 0xFE, 0xCB, 0xD1, 0x9B, 0x71, 0x95, 0x31, 0x95, 0x46, 0x1A, 0x43, 0x95, 0x5D, 0xD1,
        0x79, 0x6A, 0x30, 0x38, 0xA4, 0x92, 0x1B, 0x39, 0x8C, 0xB2, 0xC1, 0xFD, 0xB4, 0xDB, 0xBA, 0x53,
        0x2D, 0x08, 0x14, 0x29, 0x81, 0x46, 0x60, 0xAF, 0x2D, 0x61, 0x44, 0x21, 0x2B, 0x1F, 0xCB, 0x56,
        0x7B, 0x54, 0xF9, 0x86, 0xBE, 0x5A, 0x56, 0xFD, 0x42, 0xBB, 0x72, 0x90, 0x19, 0x1A, 0x98, 0x15,
        0x1B, 0xA1, 0x31, 0x43, 0xE6, 0x88, 0x90, 0xA0, 0x4A, 0x7C, 0x27, 0x73, 0xA1, 0xF5, 0x5D, 0xDD,
        0x10, 0xC0, 0x7F, 0x8F, 0xAF, 0x54, 0x8F, 0xBE, 0x09, 0xB6, 0xEA, 0x48, 0x86, 0xFB, 0xFD, 0x37,
        0x9C, 0xB0, 0x89, 0x02, 0xE5, 0xBD, 0x34, 0x52, 0x79, 0x82, 0x5C, 0x12, 0x1C, 0x49, 0x71, 0x1D,
        0x2B, 0x4F, 0x48, 0xD3, 0x5F, 0xE9, 0x2D, 0x60, 0xB6, 0xAA, 0xA9, 0x85, 0x35, 0x7C, 0x39, 0x28};
    std::string b64 = "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";
    auto bv_en = be.encode(bv);
    EXPECT_EQ(bv_en, b64);
    auto bv_de = be.decode(b64);
    EXPECT_TRUE(is_equal(bv_de.ok().value(), bv));
    std::string err_str = "QcZ";
    auto err_res = be.decode(err_str);
    EXPECT_EQ((ErrorCode)err_res.error().value().error_code(), (ErrorCode)Base64EncodingErrorCode::BAD_DECODING_SOURCE);
}
